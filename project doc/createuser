Create Users - Text directions and code
Section 6, Lecture 92
To create a feature branch:

git checkout -b nameofbranch

To create a feature branch named create-users:

git checkout -b create-users

To view list of branches:

git branch

To move to master branch:

git checkout master

To move to already created feature branch:

git checkout nameofbranch

Important to remember is to always have master branch deployable to production and work on all new features and additions in feature branches

To create a migration to create users table:

rails generate migration create_users

Then within the migration file add in the following within the create_table block to add the username, email and timestamps columns (created_at and updated_at):

t.string :username

t.string :email

t.timestamps

To run the migration file and create the users table:

rake db:migrate

Add a user.rb model file under app/models folder and fill in the following:

class User < ActiveRecord::Base

end

Then start rails console and test out connections:

rails console

User.all

User

user = User.create(username: "test", email: "test@example.com")

user = User.create(username: "test2", email: "test2@example.com")

To grab first user and update their email address:

user = User.find(1)

OR

user = User.first

user.email = "test3@example.com"

user.save

To destroy user with id = 2:

user = User.find(2)

user.destroy

To make a commit of the changes made in the feature branch:

git add -A

git commit -m "create users table and user model"

To merge the changes in the feature branch to the master branch first switch to master branch:

git checkout master

git merge nameofbranch

git push to push code to repository

To delete a feature branch that is no longer needed and has been merged to master already:

git branch -d nameofbranch

To delete a feature branch that is no longer needed but has NOT been merged to master:

git branch -D nameofbranch

 
Browse Q&A
Continue


   Show curriculum navigation Go to Dashboard
Questions
Search for a question:
Search for a question
2 questions in this lecture

Ask a new question
 Ourmazde Broomand
scaffold vs generate migration
Hi, in lecture 90 we used scaffold to create the user table but here we are using  rails generate migration . Now since both do do the same thing why don't we use scaffold which makes the migration process easier since it is only one command line ? Thanks in advance
Dan Kardell
Git and DB / Branch
When we create a branch and work on it, is the database itself also in the repository such that if we rake db:migrate in a feature branch and then switch back to the master branch, is the database also reverted (at there really 2 databases when we have branch?)
Question Details
